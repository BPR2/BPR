@page "/adminUnitManage"
@using BPR_RazorLibrary.Services
@using BPR_RazorLibrary.Services.Receivers
@using BPR_RazorLibrary.Services.Sensor
@using BPR_RazorLibrary.Services.Users
@using BPR_RazorLibrary.Models
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Forms

@inject IUserService UserService
@inject IReceiverService _ReceiverService
@inject ISensorService _SensorService
@inject AuthenticationStateProvider AuthenticationStateProvider

<style>

    .card {
        margin-top: 10px;
        padding: 10px !important;
        border-radius: 10px;
        width: -webkit-fill-available;
    }

    .form-label-group, .form-label-group label {
        margin-top: 1.5rem;
    }

        .form-label-group .oi {
            margin-bottom: 0.5rem;
        }

    .tab {
        margin-top: 1.5rem;
        overflow: hidden;
        background-color: #f1f1f1;
        border-radius: 30px;
    }

        .tab button {
            background-color: inherit;
            border: none;
            outline: none;
            cursor: pointer;
            padding: 14px 16px;
            transition: 0.3s;
            font-size: 17px;
        }

            .tab button:hover {
                background-color: #ddd;
            }

    .container {
        justify-content:center !important;
        max-width: 700px !important;
        max-height: 550px !important;
        margin-top: 1.5rem !important;
    }

    .input-group-text {
        background: #1565a2 !important;
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
        justify-content: center;
        padding: 20px !important;
    }

    input:focus {
        outline: 0 0 0 0 !important;
        box-shadow: 0 0 0 0 !important;
    }

    .oi, .fa-solid {
        color: white;
        position: absolute;
        top: 13px;
    }
</style>


<div class="tabcontent">
    <div class="tab">
        <button style="@(tab1?"background-color: #7fc469;color:white;":"")" @onclick="(x=>DisplayTab(1))">Assign Receiver</button>

        <AuthorizeView Policy="Admin">
            <button style="@(tab2?"background-color: #7fc469;color:white;":"")" @onclick="(x=>DisplayTab(2))">Add Sensor</button>
        </AuthorizeView>
</div>

<EditForm Model="@newReceiver" OnValidSubmit="@Assign">
            <DataAnnotationsValidator />
            <ValidationSummary />
        <div class="card">
            <div class="card-body">
@if (tab1)
{                 <div class="form-register">
                       <div class="form-label-group">
                            <div class="form-label-group input-group form-group">
                                 <span class="input-group-text"><i class="fa-solid fa-qrcode"></i> </span>
                                 <input type="text" class="form-control" placeholder="Serial Number" @bind-value="serialNumber" required />
                            </div>

                            <div class="form-label-group input-group form-group">
                                <span class="input-group-text"><i class="fa-solid fa-user"></i></span>
                                <input class="form-control" type="text" placeholder="Assign to User" list="userSearch" @bind-value="username" required />
                            </div>

                            <datalist id="userSearch">
                                     @foreach (var item in users)
                                     {
                                        <option>@item.Username</option>
                                     }
                            </datalist>
                       </div>
                   </div>
}

@if (tab2)
{
                 <div class="form-register">

                    <div class="form-label-group">

                        <div class="form-label-group input-group form-group">
                             <span class="input-group-text"><i class="fa-solid fa-tag"></i></span>
                             <input type="text" class="form-control" placeholder="Sensor Tag Number" @bind-value="tagNumber" required/>
                        </div>

                        <div class="form-label-group input-group form-group">
                             <span class="input-group-text"><i class="fa-solid fa-qrcode"></i></span>
                             <input type="text" class="form-control" placeholder="Sensor Serial Number" list="receiverSearch" @bind-value="sensorSerialNumber" required />
                        </div>

                        <datalist id="receiverSearch">
                                  @foreach (var item in receivers)
                                  {
                                    <option>@item.SerialNumber</option>
                                  }
                        </datalist>
                     </div>

                 </div>
}
                <div class="text-center">
                     <button class="btn btn-outline-success btn-block text-uppercase" type="submit" style="margin-top: 1rem; margin-bottom: .5rem; ">Assign</button>
                </div>

                @if (!string.IsNullOrWhiteSpace(message) || !string.IsNullOrWhiteSpace(message1))
                {
                   @if (!string.IsNullOrWhiteSpace(message))
                   {
                      <div class="alert alert-danger">
                         @message
                      </div>
                   }
                   else
                   {
                      <div class="alert alert-success">
                          @message1
                      </div>
                   }
                }
            </div>
        </div>
    </EditForm>
</div>




@code {
    //Assign receiver tab
    private Receiver newReceiver = new Receiver();
    private string serialNumber = String.Empty;
    private string username = String.Empty;
    List<User> users = new List<User>();

    //Add new sensor tab
    private Sensor newSensor = new Sensor();
    private string tagNumber = String.Empty;
    private string sensorSerialNumber = String.Empty;
    List<Receiver> receivers = new List<Receiver>();

    private string message = String.Empty;
    private string message1 = String.Empty;

    private bool tab1 = true;
    private bool tab2 = false;

    protected override async Task OnInitializedAsync()
    {
        users = await UserService.GetAllUsers();
        receivers = await _ReceiverService.GetAllReceivers();
    }

    private async Task Assign() {
        if (tab1)
        { await AssignNewReceiver(); }
        else if (tab2) 
        { await AddNewSensor();}
    }

    private async Task AssignNewReceiver()
    {
        string responese = await _ReceiverService.AssignReceiver(serialNumber, username);
        if (responese.Equals("13"))
        {
            message = "Serial Number is already assigned!";
            message1 = String.Empty;
        }
        else if (responese.Equals("10"))
        {
            message = "Provided User doesn't exist!";
            message1 = String.Empty;
        }
        else
        {
            message = String.Empty;
            message1 = "Receiver successfully assigned!";
            serialNumber = String.Empty;
            username = String.Empty;
        }
    }

    private async Task AddNewSensor()
    {
        string responese = await _SensorService.AddNewSensor(tagNumber, sensorSerialNumber);
        if (responese.Equals("13"))
        {
            message = "Tag Number is already assigned!";
            message1 = String.Empty;
        }
        else if (responese.Equals("10"))
        {
            message = "Provided Receiver doesn't exist!";
            message1 = String.Empty;
        }
        else
        {
            message = String.Empty;
            message1 = "Sensor successfully added!";
            tagNumber = String.Empty;
            sensorSerialNumber = String.Empty;
        }
    }

    private void DisplayTab(int TabNumber)
    {
        switch (TabNumber)
        {
            case 1:
                this.tab1 = true;
                this.tab2 = false;
                message = String.Empty;
                message1 = String.Empty;
                break;
            case 2:
                this.tab1 = false;
                this.tab2 = true;
                message = String.Empty;
                message1 = String.Empty;
                break;
        }
    }
}
