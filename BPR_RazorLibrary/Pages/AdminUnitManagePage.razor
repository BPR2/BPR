@page "/adminUnitManage"
@using BPR_RazorLibrary.Services
@using BPR_RazorLibrary.Services.Receivers
@using BPR_RazorLibrary.Services.Sensor
@using BPR_RazorLibrary.Services.Users
@using BPR_RazorLibrary.Models
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Forms

@inject IUserService UserService
@inject IReceiverService _ReceiverService
@inject ISensorService _SensorService
@inject AuthenticationStateProvider AuthenticationStateProvider

<style>
    .AssignReceiver {
        margin: 30px;
    }

    .card {
        padding: 10px;
        border-radius: 10px;
    }

    .form-label-group, .form-label-group label {
        margin-top: 1.5rem;
    }

        .form-label-group .oi {
            margin-bottom: 0.5rem;
        }

    .tab {
        margin-top: 1.5rem;
        overflow: hidden;
        background-color: #f1f1f1;
        border-radius: 10px;
    }

        .tab button {
            background-color: inherit;
            border: none;
            outline: none;
            cursor: pointer;
            padding: 14px 16px;
            transition: 0.3s;
            font-size: 17px;
        }

            .tab button:hover {
                background-color: #ddd;
            }

    .tabcontent {
        padding: 6px 12px;
        border-top: none;
    }

</style>


<div class="tab">
    <button style="@(tab1?"background-color: #808080;color:white;":"")" @onclick="(x=>DisplayTab(1))">Assign Receiver</button>

    <AuthorizeView Policy="Admin">
    <button style="@(tab2?"background-color: #808080;color:white;":"")" @onclick="(x=>DisplayTab(2))">Add Sensor</button>
    </AuthorizeView>

</div>

@if (tab1)
{
    <div class="tabcontent">

        <EditForm Model="@newReceiver" OnValidSubmit="@AssignNewReceiver">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="container">

                <div class="row">
                    <div class="col-md-9 mx-auto">
                        <div class="card AssignReceiver">
                            <div class="card-body">
                                <h5 class="card-title text-center">Assign Receiver</h5>
                                <div class="form-register">

                                    <div class="form-label-group">
                                        <label><i class="oi oi-compass"> </i> Serial Number:</label>
                                        <InputText class="form-control" @bind-Value="serialNumber" placeholder="Serial Number" required />

                                        <label><i class="oi oi-person"> </i> Assign to User:</label>
                                        <input class="form-control" type="text" list="userSearch" @bind-value="username" placeholder="Username" required />
                                        <datalist id="userSearch">
                                            @foreach (var item in users)
                                            {
                                                <option>@item.Username</option>
                                            }
                                        </datalist>
                                    </div>

                                </div>

                                <div class="text-center">
                                    <button class="btn btn-outline-success btn-block text-uppercase" type="submit" style="margin-top: 1rem; margin-bottom: .5rem; ">Assign</button>
                                </div>

                                @if (!string.IsNullOrWhiteSpace(message) || !string.IsNullOrWhiteSpace(message1))
                                {
                                    @if (!string.IsNullOrWhiteSpace(message))
                                    {
                                        <div class="alert alert-danger">
                                            @message
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="alert alert-success">
                                            @message1
                                        </div>
                                    }
                                }

                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </EditForm>

    </div>
}

@if (tab2)
{
    <div class="tabcontent">
        <EditForm Model="@newSensor" OnValidSubmit="@AddNewSensor">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="container">

                <div class="row">
                    <div class="col-md-9 mx-auto">
                        <div class="card AssignReceiver">
                            <div class="card-body">
                                <h5 class="card-title text-center">Assign Receiver</h5>
                                <div class="form-register">

                                    <div class="form-label-group">
                                        <label><i class="oi oi-tag"> </i> Sensor Tag Number:</label>
                                        <InputText class="form-control" @bind-Value="tagNumber" placeholder="Sensor Tag Number" required />

                                        <label><i class="oi oi-compass"> </i> Add to Receiver:</label>
                                        <input class="form-control" type="text" list="receiverSearch" @bind-value="sensorSerialNumber" placeholder="Receiver Serial Number" required />
                                        <datalist id="receiverSearch">
                                            @foreach (var item in receivers)
                                            {
                                                <option>@item.SerialNumber</option>
                                            }
                                        </datalist>
                                    </div>

                                </div>

                                <div class="text-center">
                                    <button class="btn btn-outline-success btn-block text-uppercase" type="submit" style="margin-top: 1rem; margin-bottom: .5rem; ">Assign</button>
                                </div>

                                @if (!string.IsNullOrWhiteSpace(message) || !string.IsNullOrWhiteSpace(message1))
                                {
                                    @if (!string.IsNullOrWhiteSpace(message))
                                    {
                                        <div class="alert alert-danger">
                                            @message
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="alert alert-success">
                                            @message1
                                        </div>
                                    }
                                }

                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </EditForm>
    </div>
}




@code {
    //Assign receiver tab
    private Receiver newReceiver = new Receiver();
    private string serialNumber = String.Empty;
    private string username = String.Empty;
    List<User> users = new List<User>();

    //Add new sensor tab
    private Sensor newSensor = new Sensor();
    private string tagNumber = String.Empty;
    private string sensorSerialNumber = String.Empty;
    List<Receiver> receivers = new List<Receiver>();

    private string message = String.Empty;
    private string message1 = String.Empty;

    private bool tab1 = true;
    private bool tab2 = false;

    protected override async Task OnInitializedAsync()
    {
        users = await UserService.GetAllUsers();
        receivers = await _ReceiverService.GetAllReceivers();
    }

    private async Task AssignNewReceiver()
    {
        string responese = await _ReceiverService.AssignReceiver(serialNumber, username);
        if (responese.Equals("13"))
        {
            message = "Serial Number is already assigned!";
            message1 = String.Empty;
        }
        else if (responese.Equals("10"))
        {
            message = "Provided User doesn't exist!";
            message1 = String.Empty;
        }
        else
        {
            message = String.Empty;
            message1 = "Receiver successfully assigned!";
            serialNumber = String.Empty;
            username = String.Empty;
        }
    }

    private async Task AddNewSensor()
    {
        string responese = await _SensorService.AddNewSensor(tagNumber, sensorSerialNumber);
        if (responese.Equals("13"))
        {
            message = "Tag Number is already assigned!";
            message1 = String.Empty;
        }
        else if (responese.Equals("10"))
        {
            message = "Provided Receiver doesn't exist!";
            message1 = String.Empty;
        }
        else
        {
            message = String.Empty;
            message1 = "Sensor successfully added!";
            tagNumber = String.Empty;
            sensorSerialNumber = String.Empty;
        }
    }

    private void DisplayTab(int TabNumber)
    {
        switch (TabNumber)
        {
            case 1:
                this.tab1 = true;
                this.tab2 = false;
                message = String.Empty;
                message1 = String.Empty;
                break;
            case 2:
                this.tab1 = false;
                this.tab2 = true;
                message = String.Empty;
                message1 = String.Empty;
                break;
        }
    }
}
